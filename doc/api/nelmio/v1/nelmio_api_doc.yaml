nelmio_api_doc:
    documentation:
        tags:
            - name: Conference
              description: Conference related api
            - name: GlobalSearch
              description: Global search of conferences and reports

        paths:
            /api/v1/conferences:
                get:
                    operationId: get_conferences
                    summary: Get paginated list of conferences
                    tags:
                        - Conference
                    parameters:
                        - name: page
                          in: query
                          description: Pagination page
                          required: false
                          schema:
                              type: string
                              example: '1'
                        - name: report_number
                          in: query
                          description: The number of reports in every conference
                          required: false
                          schema:
                              type: string
                              example: '3'
                        - name: start_date
                          in: query
                          description: The start date and time of the conferences
                          required: false
                          schema:
                              type: string
                              format: date-time
                              example: '2024-01-01T09:00:00'
                        - name: end_date
                          in: query
                          description: The end date and time of the conferences
                          required: false
                          schema:
                              type: string
                              format: date-time
                              example: '2024-01-31T18:00:00'
                        - name: is_available
                          in: query
                          description: Show conference if it is available minimum 15 minutes for a report (`0, false` or `1, true`)
                          required: false
                          schema:
                              type: string
                              example: "0"
                    responses:
                        '200':
                            description: Got paginated conferences
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            data:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: integer
                                                            example: 364
                                                        title:
                                                            type: string
                                                            example: test
                                                        startedAt:
                                                            type: string
                                                            format: date-time
                                                            example: '2025-10-01 11:00'
                                                        endedAt:
                                                            type: string
                                                            format: date-time
                                                            example: '2025-10-01 18:00'
                                            total:
                                                type: integer
                                                example: 18
                                            count:
                                                type: integer
                                                example: 15
                                            current_page:
                                                type: integer
                                                example: 1
                                            first_page_url:
                                                type: string
                                                format: uri
                                                example: /api/v1/conferences/?page=1
                                            last_page:
                                                type: integer
                                                example: 2
                                            last_page_url:
                                                type: string
                                                format: uri
                                                example: /api/v1/conferences/?page=2
                                            next_page_url:
                                                type: string
                                                format: uri
                                                example: /api/v1/conferences/?page=2
                                            path:
                                                type: string
                                                example: /api/v1/conferences/
                                            per_page:
                                                type: integer
                                                example: 15
                                            prev_page_url:
                                                type: string
                                                format: uri
                                                nullable: true
                                                example: null
                                            to:
                                                type: integer
                                                example: 15
                post:
                    operationId: create_conference
                    summary: Create a new conference
                    tags:
                        - Conference
                    responses:
                        '201':
                            description: Conference created
                        '422':
                            description: Validation error

            /conferences/{id}:
                get:
                    operationId: get_conference
                    summary: Get a single conference
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: Successful operation
                put:
                    operationId: update_conference
                    summary: Update a conference
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: Conference updated
                        '422':
                            description: Validation error
                delete:
                    operationId: delete_conference
                    summary: Delete a conference
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '204':
                            description: Conference deleted

            /conferences/{id}/join:
                post:
                    operationId: join_conference
                    summary: Join a conference
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '204':
                            description: User joined the conference

            /conferences/{id}/cancel:
                post:
                    operationId: cancel_conference
                    summary: Cancel participation in a conference
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '204':
                            description: User removed from the conference

            /conferences/{id}/export-excel:
                post:
                    operationId: export_conference_excel
                    summary: Export conference data to Excel
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: Excel file exported

            /conferences/{id}/export-pdf:
                post:
                    operationId: export_conference_pdf
                    summary: Export conference data to PDF
                    tags:
                        - Conference
                    parameters:
                        - name: id
                          in: path
                          required: true
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: PDF file exported

            /conferences/import-csv:
                post:
                    operationId: import_csv
                    summary: Import conferences from a CSV file
                    tags:
                        - Conference
                    responses:
                        '200':
                            description: CSV import initiated

            /conferences/subscribed:
                get:
                    operationId: get_subscribed_conferences
                    summary: Get conferences the user is subscribed to
                    tags:
                        - Conference
                    responses:
                        '200':
                            description: List of subscribed conferences

            /api/v1/global-search:
                get:
                    tags:
                        - GlobalSearch
                    operationId: get_global_search
                    summary: Global search by page
                    parameters:
                        - name: page
                          in: query
                          description: Pagination page
                          schema:
                              type: integer
                          example: 1
                    responses:
                        '200':
                            description: Got paginated comments for specific report
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            conferences:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: integer
                                                            example: 0
                                                        title:
                                                            type: string
                                                            example: string
                                            reports:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: integer
                                                            example: 0
                                                        title:
                                                            type: string
                                                            example: string
                                                        conference_id:
                                                            type: integer
                                                            example: 0
                        '500':
                            description: Server error
            /conferences/{conference_id}/reports:
                get:
                    tags: [Report]
                    summary: Get all reports for a specific conference
                    security:
                        - bearerAuth: []
                    parameters:
                        - in: path
                          name: conference_id
                          required: true
                          schema:
                              type: integer
                        - in: query
                          name: start_time
                          schema:
                              type: string
                              format: date-time
                          example: '2024-12-27T12:00'
                        - in: query
                          name: end_time
                          schema:
                              type: string
                              format: date-time
                          example: '2024-12-27T18:00'
                        - in: query
                          name: duration
                          schema:
                              type: integer
                          example: 30
                    responses:
                        '200':
                            description: Got all reports for specific conference
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            id: { type: integer, example: 455 }
                                            title: { type: string, example: "Soluta sed ipsum consequuntur odio." }
                                            description: { type: string, example: "Beatae pariatur omnis omnis explicabo dolores pariatur fugit porro." }
                                            startedAt: { type: string, format: datetime, example: "2024-12-27 17:10" }
                                            endedAt: { type: string, format: datetime, example: "2024-12-27 16:50" }
                                            commentsNumber: { type: integer, example: 84 }
                        '401':
                            description: The request is unauthenticated
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            code: { type: integer, example: 401 }
                                            message: { type: string, example: "JWT Token not found" }
                        '403': { description: The user doesn't have permissions to a resource or action }
                        '404': { description: The requested resource could not be found }
                        '500': { description: Server error }
                
                post:
                    tags: [Report]
                    summary: Create a report for a specific conference
                    security:
                        - bearerAuth: []
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required: [title, description, startedAt, endedAt]
                                    properties:
                                        title: { type: string, example: "Title" }
                                        description: { type: string, example: "Description" }
                                        startedAt: { type: string, format: date-time, example: "2025-10-01T11:00" }
                                        endedAt: { type: string, format: date-time, example: "2025-10-01T18:00" }
                                        document: { type: string, format: binary, example: "document.pptx" }
                    responses:
                        '201':
                            description: Created a report
                        '401':
                            description: The request is unauthenticated
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            code: { type: integer, example: 401 }
                                            message: { type: string, example: "JWT Token not found" }
                        '422':
                            description: Form validation errors
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            errors:
                                                type: object
                                                properties:
                                                    title: { type: string, example: ["The title should be not null"] }
                                                    description: { type: string, example: ["The description should be not null"] }
                                                    startedAt: { type: string, example: ["The start time cannot be blank"] }
                                                    endedAt: { type: string, example: ["The end time cannot be blank"] }
                                                    document: { type: string, example: ["The file should be not bigger than 10 mb"] }
                        '403': { description: The user doesn't have permissions to a resource or action }
                        '404': { description: The requested resource could not be found }
                        '500': { description: Server error }
            
            /conferences/{conference_id}/reports/{id}:
                get:
                    tags: [Report]
                    summary: Get a specific report
                    security:
                        - bearerAuth: []
                    parameters:
                        - in: path
                          name: conference_id
                          required: true
                          schema:
                              type: integer
                        - in: path
                          name: id
                          required: true
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: Showed the specified report
                        '401':
                            description: The request is unauthenticated
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            code: { type: integer, example: 401 }
                                            message: { type: string, example: "JWT Token not found" }
                        '403': { description: The user doesn't have permissions to a resource or action }
                        '404': { description: The requested resource could not be found }
                        '500': { description: Server error }
                
                put:
                    tags: [Report]
                    summary: Update a specific report
                    security:
                        - bearerAuth: []
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required: [ title, description, startedAt, endedAt ]
                                    properties:
                                        title: { type: string, example: "Title" }
                                        description: { type: string, example: "Description" }
                                        startedAt: { type: string, format: date-time, example: "2025-10-01T11:00" }
                                        endedAt: { type: string, format: date-time, example: "2025-10-01T18:00" }
                                        document: { type: string, format: binary, example: "document.pptx" }
                    responses:
                        '200':
                            description: Updated the specified report
                        '401':
                            description: The request is unauthenticated
                        '422':
                            description: Form validation errors
                        '403': { description: The user doesn't have permissions to a resource or action }
                        '404': { description: The requested resource could not be found }
                        '500': { description: Server error }
                
                delete:
                    tags: [Report]
                    summary: Delete a specific report
                    security:
                        - bearerAuth: []
                    responses:
                        '204': { description: Deleted the specified report }
                        '401': { description: The request is unauthenticated }
                        '403': { description: The user doesn't have permissions to a resource or action }
                        '404': { description: The requested resource could not be found }
                        '500': { description: Server error }
            
            /conferences/{conference_id}/reports/{id}/{file_name}:
                get:
                    tags: [Report]
                    summary: Download the specified file
                    security:
                        - bearerAuth: []
                    parameters:
                        - in: path
                          name: conference_id
                          required: true
                          schema:
                              type: integer
                        - in: path
                          name: id
                          required: true
                          schema:
                              type: integer
                        - in: path
                          name: file_name
                          required: true
                          schema:
                              type: string
                    responses:
                        '200': { description: Downloading the specified file }
                        '401': { description: The request is unauthenticated }
                        '403': { description: The user doesn't have permissions to a resource or action }
                        '404': { description: The requested resource could not be found }
                        '500': { description: Failed to open the file for reading }

            /api/v1/reports/{id}/comments:
                get:
                    tags: [ Report Comments ]
                    summary: Get paginated comments for a specific report
                    security:
                        -   bearerAuth: [ ]
                    parameters:
                        -   in: path
                            name: id
                            required: true
                            schema:
                                type: integer
                        -   in: query
                            name: page
                            schema:
                                type: integer
                                example: 1
                            description: Pagination page
                    responses:
                        200:
                            description: Got paginated comments for specific report
                        401:
                            description: The request is unauthenticated
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            code:
                                                type: integer
                                                example: 401
                                            message:
                                                type: string
                                                example: JWT Token not found
                        403:
                            description: The user doesn't have permissions to a resource or action
                        500:
                            description: Server error
                
                post:
                    tags: [ Report Comments ]
                    summary: Create a comment for a specific report
                    security:
                        -   bearerAuth: [ ]
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required: [ content ]
                                    properties:
                                        content: { type: string, example: "Comment example" }
                    
                    responses:
                        201:
                            description: Created a comment for a specific report
                        401:
                            description: The request is unauthenticated
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            code:
                                                type: integer
                                                example: 401
                                            message:
                                                type: string
                                                example: JWT Token not found
                        403:
                            description: The user doesn't have permissions to a resource or action
                        422:
                            description: Validation failed
                        500:
                            description: Server error
            
            /api/v1/reports/{id}/comments/{comment_id}:
                get:
                    tags: [ Report Comments ]
                    summary: Get a specific comment for a report
                    security:
                        -   bearerAuth: [ ]
                    parameters:
                        -   in: path
                            name: id
                            required: true
                            schema:
                                type: integer
                        -   in: path
                            name: comment_id
                            required: true
                            schema:
                                type: integer
                    responses:
                        200:
                            description: Showed the specified comment
                        401:
                            description: Unauthenticated
                        403:
                            description: Forbidden
                        404:
                            description: Not Found
                        500:
                            description: Server error
                
                patch:
                    tags: [ Report Comments ]
                    summary: Update a comment
                    security:
                        -   bearerAuth: [ ]
                    parameters:
                        -   in: path
                            name: id
                            required: true
                            schema:
                                type: integer
                        -   in: path
                            name: comment_id
                            required: true
                            schema:
                                type: integer
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required: [ content ]
                                    properties:
                                        content: { type: string, example: "Comment example" }
                    responses:
                        200:
                            description: Updated the specified comment
                        401:
                            description: Unauthenticated
                        403:
                            description: Forbidden
                        404:
                            description: Not Found
                        422:
                            description: Validation failed
                        500:
                            description: Server error
                
                delete:
                    tags: [ Report Comments ]
                    summary: Delete a comment
                    security:
                        -   bearerAuth: [ ]
                    parameters:
                        -   in: path
                            name: id
                            required: true
                            schema:
                                type: integer
                        -   in: path
                            name: comment_id
                            required: true
                            schema:
                                type: integer
                    responses:
                        204:
                            description: Deleted successfully
                        401:
                            description: Unauthenticated
                        403:
                            description: Forbidden
                        404:
                            description: Not Found
                        500:
                            description: Server error
            
            /api/v1/reports/{id}/comments/load:
                get:
                    tags: [ Report Comments ]
                    summary: Load comments for report with pagination and user context
                    security:
                        -   bearerAuth: [ ]
                    parameters:
                        -   in: path
                            name: id
                            required: true
                            schema:
                                type: integer
                        -   in: query
                            name: page
                            required: false
                            schema:
                                type: integer
                                default: 1
                    responses:
                        200:
                            description: Loaded comments
